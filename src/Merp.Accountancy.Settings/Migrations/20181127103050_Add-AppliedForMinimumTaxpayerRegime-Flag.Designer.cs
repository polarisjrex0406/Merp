// <auto-generated />
using System;
using Merp.Accountancy.Settings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Merp.Accountancy.Settings.Migrations
{
    [DbContext(typeof(AccountancySettingsDbContext))]
    [Migration("20181127103050_Add-AppliedForMinimumTaxpayerRegime-Flag")]
    partial class AddAppliedForMinimumTaxpayerRegimeFlag
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Merp.Accountancy.Settings.Model.ProvidenceFund", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<string>("Description");

                    b.Property<decimal>("Rate");

                    b.HasKey("Id");

                    b.HasIndex("Description");

                    b.HasIndex("Rate");

                    b.ToTable("ProvidenceFunds");
                });

            modelBuilder.Entity("Merp.Accountancy.Settings.Model.Vat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AppliedForMinimumTaxPayer");

                    b.Property<string>("Country");

                    b.Property<string>("Description");

                    b.Property<decimal>("Rate");

                    b.Property<bool>("Unlisted");

                    b.HasKey("Id");

                    b.HasIndex("Description");

                    b.HasIndex("Rate");

                    b.ToTable("Vats");
                });

            modelBuilder.Entity("Merp.Accountancy.Settings.Model.WithholdingTax", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<string>("Description");

                    b.Property<decimal>("Rate");

                    b.Property<decimal>("TaxableAmountRate");

                    b.HasKey("Id");

                    b.HasIndex("Description");

                    b.HasIndex("Rate");

                    b.ToTable("WithholdingTaxes");
                });
#pragma warning restore 612, 618
        }
    }
}
