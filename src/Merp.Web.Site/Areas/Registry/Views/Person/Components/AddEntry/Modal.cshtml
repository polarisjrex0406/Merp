@model Merp.Web.Site.Areas.Registry.Models.Person.AddEntryViewModel

@{
    var fieldPrefix = ViewData.TemplateInfo.HtmlFieldPrefix;
    var modalId = $"{fieldPrefix}";
    var labelledById = $"{modalId}_LabelledBy";
    var modalTemplateId = fieldPrefix + "_Person_Modal_Template";
    var formId = modalId + "_form";
    var modalCommandExecutedEvent = $"{modalId}_Executed";
    var firstNameId = $"{fieldPrefix}_{nameof(Model.FirstName)}";
    var lastNameId = $"{fieldPrefix}_{nameof(Model.LastName)}";
}
<div class="modal fade" id="@modalId" tabindex="-1" role="dialog" aria-labelledby="@labelledById" data-form-wrap="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title" id="@labelledById">Person Registration</h4>
      </div>
      <div class="modal-body">
        <vc:add-entry model="@Model" mode="default" field-prefix="@fieldPrefix"></vc:add-entry>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save</button>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
  //# sourceURL=registry/views/person/components/addentry/modal.js
  $(function () {

    var modal = $('#@modalId');

    function onPrimaryClick() {
      $('.modal-body form', modal).submit();
    }

    function onSubmit(event) {
      var form = $('.modal-body form', modal);

      event.preventDefault();

      if (!form.valid()) {
        return;
      }

      $.ajax({
        type: 'PUT',
        url: form.attr('action'),
        data: form.serialize().split('@(modalId).').join('')
      })
        .done(function (result) {

          var firstName = $('#@firstNameId').val(),
            lastName = $('#@lastNameId').val();

          $('.modal-body', modal).empty().append(result);
          $.validator.unobtrusive.parse(modal);

          if (completedWithoutValidationErrors(result)) {
            modal.modal('hide');
            modal.one('hidden.bs.modal', function () {
              modal.trigger({
                type: '@modalCommandExecutedEvent',
                partyName: firstName + ' ' + lastName
              });
            });
          }
        })
        .fail(function (result) {

        })
        .always(function (result) {

        });
    }

    function completedWithoutValidationErrors(result) {
      return $(result).attr('data-valid') === 'true';
    }

    function onModalHidden() {
      $('.modal-body form', modal)[0].reset();
    }

    $.validator.unobtrusive.parse(modal);
    modal.on('hidden.bs.modal', onModalHidden);
    modal.on('submit', '.modal-body form', onSubmit);
    modal.on('click', '.modal-footer .btn-primary', onPrimaryClick);
  });
</script>